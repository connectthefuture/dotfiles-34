#!/bin/sh
# dotfiles manager

profile=${1}
dotfiles=()

# make sure the DOTFILES_PATH global exists
if [ -z ${DOTFILES_PATH} ]
then
    export DOTFILES_PATH=${HOME}/.dotfiles
fi

# only run if a profile was passed in and the profile exists
if [ ! -z ${profile} ] && [ -d ${DOTFILES_PATH}/profiles/${profile} ]
then
    # if the DOTFILES_CURRENT_PROFILE_PATH global exists, store it as previous_profile_path
    if [ ! -z ${DOTFILES_CURRENT_PROFILE_PATH} ]
    then
        previous_profile_path=${DOTFILES_CURRENT_PROFILE_PATH}
    fi

    # update the DOTFILES_CURRENT_PROFILE_PATH global
    export DOTFILES_CURRENT_PROFILE_PATH=${DOTFILES_PATH}/profiles/${profile}

    if [ -f ${DOTFILES_CURRENT_PROFILE_PATH}/.dotignore ]
    then
        # read the file into an array
        IFS=$'\r\n' read -d '' -r -a files_to_ignore < ${DOTFILES_CURRENT_PROFILE_PATH}/.dotignore
        files_to_ignore+=(".dotfiles")
        files_to_ignore+=(".dotignore")
    else
        files_to_ignore=()
    fi

    # function to check if file shoud be ignored
    file_is_ignored () {
        for index in "${files_to_ignore[@]}"; do [[ ${index} == ${1} ]] && return 0; done
        return 1
    }

    # show hidden files
    shopt -s dotglob

    # loop through all files in the profile directory
    for file in ${DOTFILES_CURRENT_PROFILE_PATH}/*
    do
        # make sure a file was actually found in the directory
        if [[ ${file} != ${DOTFILES_CURRENT_PROFILE_PATH}'/*' ]]
        then
            base=`basename ${file}`

            # if there is a meta .dotfiles directory (or file), set the meta flag to true and skip over it
            if ! file_is_ignored ${base}
            then
                # if the file already exists in the user's home directory, we need to remove it
                if [ -f ${HOME}/${base} ] || [ -d ${HOME}/${base} ]
                then
                    rm -r ${HOME}/${base}
                fi

                # set up the symlinks
                ln -s ${file} ${HOME}/${base}

                # append the dotfiles to an array for reporting
                dotfiles+=(${base})
            fi
        fi
    done

    # run necessary actions on each new dotfile
    for filename in "${dotfiles[@]}"
    do
        # report the new symlinks to the user
        echo "${HOME}/${filename} -> ${DOTFILES_CURRENT_PROFILE_PATH}/${filename}"

        # check for meta script and run if it exists
        if [ -f ${DOTFILES_CURRENT_PROFILE_PATH}/.dotfiles/scripts/${filename}.sh ]
        then
            echo "Running script for ${filename}..."
            source ${DOTFILES_CURRENT_PROFILE_PATH}/.dotfiles/scripts/${filename}.sh
        fi
    done
# list the available profiles
else
    echo 'Available profiles:'

    for dir in ${DOTFILES_PATH}/profiles/*
    do
        if [[ ${dir} != ${DOTFILES_PATH}/profiles'/*' ]]
        then
            base=`basename ${dir}`

            echo " -> ${base}"
        fi
    done
fi
